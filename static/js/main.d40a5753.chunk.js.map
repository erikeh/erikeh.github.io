{"version":3,"sources":["state/hooks.ts","components/Controls.tsx","utils/orderLogic.ts","components/sounds.tsx","utils/colorGen.ts","utils/soundColorOptions.ts","utils/bodies.ts","state/reducers/animationStatusReducer.ts","state/actions/allActions.js","components/MatterMaker.tsx","components/Instructions.tsx","components/App.tsx","state/reducers/rootReducer.ts","state/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","ButtonContainer","styled","div","AbsoluteContainer","IconButton","Button","props","disabled","undefined","Controls","handleNewCircleClick","handleNewRandomTriangleClick","handleNewDroneHexagonClick","handleNewGravityCircleClick","handleNewOneShotRectangleClick","handleDeleteAllBodiesClick","circleInstructionsPlaying","state","animationStatus","playingCircleInstructions","triangleInstructionsPlaying","playingTriangleInstructions","gravityCircleInstructionsPlaying","playingGravityCircleInstructions","oneShotRectangleInstructionsPlaying","playingOneShotRectangleInstructions","droneHexagonInstructionsPlaying","playingDroneHexagonInstructions","areOtherInstructionsPlaying","currentShape","instructionAnimationStatuses","Object","entries","filter","instruction","includes","some","otherInstructions","onClick","motion","i","className","whileHover","scale","keyMemo","fixedSound","sound","note","Howl","src","process","volume","play","drone1","loop","selectRandomOption","options","optionKeys","keys","Math","floor","Matter","Common","random","Number","length","selectNextOption","uniqueIndices","backgroundColors","generateBackgroundColor","randomIndex","colorOptions","idx","colors","Array","uniqueRandomIndex","splice","push","grabRandomUniqueIndex","soundColorOptionsPluck","color","soundColorOptionsDrone","soundColorOptionsOneShot","createGravityCircle","x","window","innerWidth","y","innerHeight","radius","Bodies","circle","density","label","isStatic","render","fillStyle","lineWidth","strokeStyle","plugin","attractors","bodyA","bodyB","position","use","MatterAttractors","playedCircleInstructions","createAction","playedTriangleInstructions","playedGravityCircleInstructions","playedOneShotRectangleInstructions","playedDroneHexagonInstructions","initialState","animationStatusReducer","createReducer","builder","addCase","action","payload","addDefaultCase","allActions","MatterMaker","dispatch","canvasRef","useRef","Engine","Render","Runner","Composite","Events","Mouse","MouseConstraint","engine","create","useEffect","element","current","document","body","wireframes","background","height","width","gravityCircle","collisionStartHandlers","debounce","e","pairs","triangle","collidedTriangle","nextNoteOption","nextRandomNote","rectangle","collidedSquare","chord","randomChord","nextChordOption","nextChord","hexagon","fade","allBodies","world","forEach","collisionEndHandlers","once","pause","on","collidedBody","remove","mouse","canvas","mouseConstraint","constraint","stiffness","visible","clickedBody","source","Body","setStatic","gravity","add","run","runner","stop","clear","textures","ref","option","restitution","frictionAir","friction","frictionStatic","collisionFilter","group","createCircle","polygon","createRandomTriangle","createDroneHexagon","createChordRectangle","InstructionsContainer","h3","Instructions","circleControlsClicked","triangleControlsClicked","gravityCircleControlsClicked","droneHexagonControlsClicked","oneShotRectangleControlsclicked","circleInstructionsControl","useAnimation","triangleInstructionsControl","gravityCircleInstructionsControl","droneHexagonInstructionsControl","oneShotRectangleInstructionsControl","handleCircleAnimationStart","useCallback","a","start","Promise","r","setTimeout","handleTriangleAnimationStart","handleGravityCircleAnimationStart","handleDroneHexagonAnimationStart","handleOneShotRectangleAnimationStart","sentence","hidden","opacity","transition","delay","staggerChildren","letter","circleSentence1","split","map","char","span","variants","circleSentence2","triangleSentence1","triangleSentence2","gravityCircleSentence1","droneHexagonSentence1","droneHexagonSentence2","oneShotRectangleSentence1","oneShotRectangleSentence2","initial","animate","CenteredDiv","App","rootReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d40a5753.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled from 'styled-components';\nimport { Button } from 'react-bulma-components';\nimport { motion } from 'framer-motion';\nimport { useAppSelector } from '../state/hooks';\n\ninterface ControlsProps {\n  handleNewCircleClick: () => void;\n  handleNewRandomTriangleClick: () => void;\n  handleNewDroneHexagonClick: () => void;\n  handleNewGravityCircleClick: () => void;\n  handleNewOneShotRectangleClick: () => void;\n  handleDeleteAllBodiesClick: () => void;\n}\n\ntype CurrentShape = 'circle' | 'triangle' | 'gravityCircle' | 'droneHexagon' | 'oneShotRectangle';\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst AbsoluteContainer = styled.div`\n  position: absolute;\n`;\nconst IconButton = styled(Button)`\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  font-size: 25px;\n  padding: 15px 25px 0 25px;\n  &:hover {\n    cursor: default;\n    cursor: ${(props) => (props.disabled ? undefined : 'pointer')};\n  }\n`;\n\nexport default function Controls(props: ControlsProps) {\n  const {\n    handleNewCircleClick,\n    handleNewRandomTriangleClick,\n    handleNewDroneHexagonClick,\n    handleNewGravityCircleClick,\n    handleNewOneShotRectangleClick,\n    handleDeleteAllBodiesClick,\n  } = props;\n\n  const circleInstructionsPlaying = useAppSelector(\n    (state) => state.animationStatus.playingCircleInstructions\n  );\n  const triangleInstructionsPlaying = useAppSelector(\n    (state) => state.animationStatus.playingTriangleInstructions\n  );\n  const gravityCircleInstructionsPlaying = useAppSelector(\n    (state) => state.animationStatus.playingGravityCircleInstructions\n  );\n  const oneShotRectangleInstructionsPlaying = useAppSelector(\n    (state) => state.animationStatus.playingOneShotRectangleInstructions\n  );\n  const droneHexagonInstructionsPlaying = useAppSelector(\n    (state) => state.animationStatus.playingDroneHexagonInstructions\n  );\n\n  const areOtherInstructionsPlaying = (currentShape: CurrentShape) => {\n    const instructionAnimationStatuses = {\n      circleInstructionsPlaying,\n      triangleInstructionsPlaying,\n      gravityCircleInstructionsPlaying,\n      oneShotRectangleInstructionsPlaying,\n      droneHexagonInstructionsPlaying,\n    };\n    const otherInstructionsExceptCurrent = Object.entries(instructionAnimationStatuses).filter(\n      (instruction) => {\n        return !instruction[0].includes(currentShape);\n      }\n    );\n    return otherInstructionsExceptCurrent.some((otherInstructions) => otherInstructions[1]);\n  };\n\n  return (\n    <div>\n      <ButtonContainer>\n        <AbsoluteContainer>\n          <IconButton\n            onClick={handleNewCircleClick}\n            disabled={areOtherInstructionsPlaying('circle')}\n          >\n            <motion.i\n              className=\"fa fa-music\"\n              whileHover={areOtherInstructionsPlaying('circle') ? {} : { scale: 1.1 }}\n            />\n          </IconButton>\n          <IconButton\n            onClick={handleNewRandomTriangleClick}\n            disabled={areOtherInstructionsPlaying('triangle')}\n          >\n            <motion.i\n              className=\"fas fa-exclamation-triangle\"\n              whileHover={areOtherInstructionsPlaying('triangle') ? {} : { scale: 1.1 }}\n            />\n          </IconButton>\n          <IconButton\n            onClick={handleNewGravityCircleClick}\n            disabled={areOtherInstructionsPlaying('gravityCircle')}\n          >\n            <motion.i\n              className=\"fas fa-circle\"\n              whileHover={areOtherInstructionsPlaying('gravityCircle') ? {} : { scale: 1.1 }}\n            />\n          </IconButton>\n          <IconButton\n            onClick={handleNewDroneHexagonClick}\n            disabled={areOtherInstructionsPlaying('droneHexagon')}\n          >\n            <motion.i\n              className=\"fas fa-om\"\n              whileHover={areOtherInstructionsPlaying('droneHexagon') ? {} : { scale: 1.1 }}\n            />\n          </IconButton>\n          <IconButton\n            onClick={handleNewOneShotRectangleClick}\n            disabled={areOtherInstructionsPlaying('oneShotRectangle')}\n          >\n            <motion.i\n              className=\"fas fa-bahai\"\n              whileHover={areOtherInstructionsPlaying('oneShotRectangle') ? {} : { scale: 1.1 }}\n            />\n          </IconButton>\n          <IconButton onClick={handleDeleteAllBodiesClick}>\n            <motion.i className=\"far fa-trash-alt\" whileHover={{ scale: 1.1 }} />\n          </IconButton>\n        </AbsoluteContainer>\n      </ButtonContainer>\n    </div>\n  );\n}\n","import Matter from 'matter-js';\nimport { SoundColorOptions } from './soundColorOptions';\n\n// logic for selecting appropriate sound/color option\nexport function selectRandomOption(options: SoundColorOptions) {\n  const optionKeys = Object.keys(options);\n  const randomIndex = Math.floor(\n    Matter.Common.random(1, Number(optionKeys[optionKeys.length - 1]) + 1)\n  );\n  const randomSoundColorOption = options[randomIndex];\n  return randomSoundColorOption;\n}\n\nlet keyMemo: number;\nexport function selectNextOption(options: SoundColorOptions) {\n  const optionKeys = Object.keys(options);\n  function nextIndex() {\n    if (!keyMemo || keyMemo + 1 > optionKeys.length) {\n      keyMemo = Number(optionKeys[0]);\n      return options[keyMemo];\n    } else {\n      keyMemo++;\n      return options[keyMemo];\n    }\n  }\n  const nextSoundColorOption = nextIndex();\n  return nextSoundColorOption;\n}\n\n// logic for generating random index within given array of color codes\nlet uniqueIndices: number[] = [];\nexport function grabRandomUniqueIndex(colorOptions: string[]) {\n  let idx: number;\n  const generateUniqueIndices = (colors: string[]) => [...Array(colors.length).keys()];\n  const createRandomIndexWithinRange = () => {\n    return Math.floor(Math.random() * (uniqueIndices.length - 2));\n  };\n  if (!uniqueIndices.length) {\n    uniqueIndices = generateUniqueIndices(colorOptions);\n  }\n  idx = createRandomIndexWithinRange();\n  const uniqueRandomIndex = uniqueIndices.splice(idx, 1)[0];\n  uniqueIndices.push(uniqueRandomIndex);\n  return uniqueRandomIndex;\n}\n\n// function randomAngle() {\n//   let angle = Math.random() * Math.PI * 2;\n//   console.log(angle);\n//   return angle;\n// }\n","import { Howl } from 'howler';\n\nexport const fixedSound = (sound: string) => {\n  if (sound) {\n    const note = new Howl({\n      src: [`${process.env.PUBLIC_URL}/audio/${sound}`],\n      volume: 0.4,\n    });\n    note.play();\n    return note;\n  }\n};\n\nexport const randomChord = (sound: string) => {\n  if (sound) {\n    const chord = new Howl({\n      src: [`${process.env.PUBLIC_URL}/audio/${sound}`],\n      volume: 0.5,\n    });\n    chord.play();\n    return chord;\n  }\n};\n\nexport const drone1 = new Howl({\n  src: [`${process.env.PUBLIC_URL}/audio/pad1.mp3`],\n  volume: 0.5,\n  loop: true,\n});\n","import { grabRandomUniqueIndex } from './orderLogic';\nconst backgroundColors = ['BCE784', '5DD39E', '348AA7', '525174', '513B56'];\n\nexport function generateBackgroundColor() {\n  let randomIndex = grabRandomUniqueIndex(backgroundColors);\n  const randomColor = backgroundColors[randomIndex];\n  return randomColor;\n}\n\nexport function circleColorGen() {}\n","export interface SoundColorOption {\n  sound: string;\n  color: string;\n}\n\nexport interface SoundColorOptions {\n  [key: string]: SoundColorOption;\n}\n\nexport const soundColorOptions: SoundColorOptions = {\n  1: {\n    sound: 'notes1',\n    color: '#EB9486',\n  },\n  2: {\n    sound: 'notes2',\n    color: '#D5573B',\n  },\n  3: {\n    sound: 'notes3',\n    color: '#885053',\n  },\n  4: {\n    sound: 'notes4',\n    color: '#80A1C1',\n  },\n  5: {\n    sound: 'notes4',\n    color: '#D5CAD6',\n  },\n  6: {\n    sound: 'notes3',\n    color: '#80A1C1',\n  },\n};\nexport const soundColorOptionsPluck: SoundColorOptions = {\n  1: {\n    sound: 'pluck_1.mp3',\n    color: '#EB9486',\n  },\n  2: {\n    sound: 'pluck_2.mp3',\n    color: '#D5573B',\n  },\n  3: {\n    sound: 'pluck_3.mp3',\n    color: '#885053',\n  },\n  4: {\n    sound: 'pluck_4.mp3',\n    color: '#80A1C1',\n  },\n  5: {\n    sound: 'pluck_5.mp3',\n    color: '#D5CAD6',\n  },\n  6: {\n    sound: 'pluck_6.mp3',\n    color: '#80A1C1',\n  },\n  7: {\n    sound: 'pluck_7.mp3',\n    color: '#3E5641',\n  },\n  8: {\n    sound: 'pluck_8.mp3',\n    color: '#A24936',\n  },\n  9: {\n    sound: 'pluck_9.mp3',\n    color: '#D36135',\n  },\n  10: {\n    sound: 'pluck_10.mp3',\n    color: '#DC965A',\n  },\n  11: {\n    sound: 'pluck_11.mp3',\n    color: '#BB0A21',\n  },\n  12: {\n    sound: 'pluck_12.mp3',\n    color: '#4B88A2',\n  },\n  13: {\n    sound: 'pluck_13.mp3',\n    color: '#095256',\n  },\n  14: {\n    sound: 'pluck_14.mp3',\n    color: '#087F8C',\n  },\n  15: {\n    sound: 'pluck_15.mp3',\n    color: '#EFD2CB',\n  },\n  16: {\n    sound: 'pluck_16.mp3',\n    color: '#FF4365',\n  },\n};\n\nexport const soundColorOptionsDrone: SoundColorOptions = {\n  1: {\n    sound: 'drone1.mp3',\n    color: '#6D466B',\n  },\n  2: {\n    sound: 'drone2.mp3',\n    color: '#B49FCC',\n  },\n};\n\nexport const soundColorOptionsChord: SoundColorOptions = {\n  1: {\n    sound: 'chord1.wav',\n    color: '#D74E09',\n  },\n  2: {\n    sound: 'chord2.wav',\n    color: '#6E0E0A',\n  },\n  3: {\n    sound: 'chord3.wav',\n    color: '#254441',\n  },\n};\nexport const soundColorOptionsOneShot: SoundColorOptions = {\n  1: {\n    sound: 'oneshot1.wav',\n    color: '#D74E09',\n  },\n  2: {\n    sound: 'oneshot2.wav',\n    color: '#6E0E0A',\n  },\n  3: {\n    sound: 'oneshot3.wav',\n    color: '#254441',\n  },\n  4: {\n    sound: 'oneshot4.wav',\n    color: '#C45BAA',\n  },\n  5: {\n    sound: 'oneshot5.wav',\n    color: '#4E6E5D',\n  },\n  6: {\n    sound: 'oneshot6.wav',\n    color: '#6564DB',\n  },\n  7: {\n    sound: 'oneshot7.wav',\n    color: '#101D42',\n  },\n  8: {\n    sound: 'oneshot8.wav',\n    color: '#656839',\n  },\n  9: {\n    sound: 'oneshot9.wav',\n    color: '#731963',\n  },\n  10: {\n    sound: 'oneshot10.wav',\n    color: '#188FA7',\n  },\n  11: {\n    sound: 'oneshot11.wav',\n    color: '#FF7B9C',\n  },\n  12: {\n    sound: 'oneshot12.wav',\n    color: '#57737A',\n  },\n  13: {\n    sound: 'oneshot13.wav',\n    color: '#D81159',\n  },\n  14: {\n    sound: 'oneshot14.wav',\n    color: '#757761',\n  },\n  15: {\n    sound: 'oneshot15.wav',\n    color: '#DE6C83',\n  },\n  16: {\n    sound: 'oneshot16.wav',\n    color: '#0B7A75',\n  },\n};\n","import Matter from 'matter-js';\nimport MatterAttractors from 'matter-attractors';\nimport {\n  soundColorOptionsDrone,\n  soundColorOptionsPluck,\n  soundColorOptionsOneShot,\n} from './soundColorOptions';\nimport { selectRandomOption, selectNextOption } from './orderLogic';\nimport { circleColorGen } from './colorGen';\n\nMatter.use(MatterAttractors);\n\nexport interface SoundBody extends Matter.Body {\n  sound: string;\n}\nexport interface TriangleSoundBody extends SoundBody {\n  nextRandomNote: Function;\n}\nexport interface RectangleSoundBody extends SoundBody {\n  nextChord: Function;\n}\n\n// create bodies\nexport function createCircle(\n  x = Math.random() * (window.innerWidth * 0.8),\n  y = Math.random() * (window.innerHeight * 0.8),\n  radius = Math.random() * 30 + 10\n): SoundBody {\n  const option = selectRandomOption(soundColorOptionsPluck);\n  const circle = Matter.Bodies.circle(x, y, radius, {\n    restitution: 1.02,\n    frictionAir: 0,\n    friction: 0,\n    frictionStatic: 0,\n    collisionFilter: {\n      group: -1,\n    },\n    label: 'circle',\n    render: {\n      fillStyle: option.color,\n    },\n  });\n  (circle as SoundBody).sound = option.sound;\n  return circle as SoundBody;\n}\n\nexport function createRandomTriangle(\n  x = Math.random() * (window.innerWidth * 0.8),\n  y = Math.random() * (window.innerHeight * 0.8),\n  radius = Math.random() * 30 + 20\n): TriangleSoundBody {\n  const option = selectRandomOption(soundColorOptionsPluck);\n  const triangle = Matter.Bodies.polygon(x, y, 3, radius, {\n    restitution: 1.1,\n    frictionAir: 0,\n    friction: 0,\n    frictionStatic: 0,\n    label: 'triangle',\n    collisionFilter: {\n      group: -1,\n    },\n    render: {\n      fillStyle: option.color,\n    },\n  });\n  (triangle as TriangleSoundBody).sound = option.sound;\n  (triangle as TriangleSoundBody).nextRandomNote = function () {\n    const randomNote = selectRandomOption(soundColorOptionsPluck);\n    return randomNote;\n  };\n  return triangle as TriangleSoundBody;\n}\n\nexport function createGravityCircle(\n  x = Math.random() * (window.innerWidth * 0.8),\n  y = Math.random() * (window.innerHeight * 0.8),\n  radius = Math.random() * 90 + 50\n) {\n  return Matter.Bodies.circle(x, y, radius, {\n    density: 1000000000000,\n    label: 'gravityCircle',\n    isStatic: true,\n    render: {\n      fillStyle: 'black',\n      lineWidth: 0,\n      strokeStyle: 'white',\n    },\n    plugin: {\n      attractors: [\n        function (bodyA: Matter.Body, bodyB: Matter.Body) {\n          return {\n            x: (bodyA.position.x - bodyB.position.x) * 4e-6,\n            y: (bodyA.position.y - bodyB.position.y) * 4e-6,\n          };\n        },\n      ],\n    },\n  });\n}\n\nexport function createDroneHexagon(\n  x = window.innerWidth * 0.2,\n  y = window.innerHeight * 0.2,\n  radius = Math.random() * 20 + 40\n): SoundBody {\n  const option = selectRandomOption(soundColorOptionsDrone);\n  const hexagon = Matter.Bodies.polygon(x, y, 6, Matter.Common.random(25, 40), {\n    restitution: 0,\n    collisionFilter: {\n      group: -1,\n    },\n    label: 'hexagon',\n    render: {\n      fillStyle: option.color,\n    },\n  });\n  (hexagon as SoundBody).sound = option.sound;\n  return hexagon as SoundBody;\n}\n\nexport function createChordRectangle(\n  x = Math.random() * (window.innerWidth * 0.8),\n  y = Math.random() * (window.innerHeight * 0.8),\n  width = 40,\n  height = 60\n): RectangleSoundBody {\n  const option = selectNextOption(soundColorOptionsOneShot);\n  const rectangle = Matter.Bodies.rectangle(x, y, width, height, {\n    restitution: 2.5,\n    collisionFilter: {\n      group: -1,\n    },\n    label: 'rectangle',\n    render: {\n      fillStyle: option.color,\n    },\n  });\n  (rectangle as RectangleSoundBody).sound = option.sound;\n  (rectangle as RectangleSoundBody).nextChord = function () {\n    const nextOption = selectNextOption(soundColorOptionsOneShot);\n    return nextOption;\n  };\n  return rectangle as RectangleSoundBody;\n}\n","import { createReducer, createAction } from '@reduxjs/toolkit';\n\nexport const playedCircleInstructions = createAction('PLAYED_CIRCLE_INSTRUCTIONS');\nexport const playedTriangleInstructions = createAction('PLAYED_TRIANGLE_INSTRUCTIONS');\nexport const playedGravityCircleInstructions = createAction('PLAYED_GRAVITY_CIRCLE_INSTRUCTIONS');\nexport const playedOneShotRectangleInstructions = createAction('PLAYED_ONE_SHOT_INSTRUCTIONS');\nexport const playedDroneHexagonInstructions = createAction('PLAYED_DRONE_HEXAGON_INSTRUCTIONS');\n\nexport const playingCircleInstructions = createAction<boolean>('PLAYING_CIRCLE_INSTRUCTIONS');\nexport const playingTriangleInstructions = createAction<boolean>('PLAYING_TRIANGLE_INSTRUCTIONS');\nexport const playingGravityCircleInstructions = createAction<boolean>(\n  'PLAYING_GRAVITY_CIRCLE_INSTRUCTIONS'\n);\nexport const playingOneShotRectangleInstructions = createAction<boolean>(\n  'PLAYING_ONE_SHOT_RECTANGLE_INSTRUCTIONS'\n);\nexport const playingDroneHexagonInstructions = createAction<boolean>(\n  'PLAYING_DRONE_HEXAGON_INSTRUCTIONS'\n);\n\ninterface HasAnimatedState {\n  playedCircleInstructions: boolean;\n  playingCircleInstructions: boolean;\n  playedTriangleInstructions: boolean;\n  playingTriangleInstructions: boolean;\n  playedGravityCircleInstructions: boolean;\n  playingGravityCircleInstructions: boolean;\n  playedOneShotRectangleInstructions: boolean;\n  playingOneShotRectangleInstructions: boolean;\n  playedDroneHexagonInstructions: boolean;\n  playingDroneHexagonInstructions: boolean;\n}\n\nconst initialState: HasAnimatedState = {\n  playedCircleInstructions: false,\n  playingCircleInstructions: false,\n  playedTriangleInstructions: false,\n  playingTriangleInstructions: false,\n  playedGravityCircleInstructions: false,\n  playingGravityCircleInstructions: false,\n  playedOneShotRectangleInstructions: false,\n  playingOneShotRectangleInstructions: false,\n  playedDroneHexagonInstructions: false,\n  playingDroneHexagonInstructions: false,\n};\n\nexport const animationStatusReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(playedCircleInstructions, (state = initialState, action) => {\n      state.playedCircleInstructions = true;\n    })\n    .addCase(playedTriangleInstructions, (state = initialState, action) => {\n      state.playedTriangleInstructions = true;\n    })\n    .addCase(playedGravityCircleInstructions, (state = initialState, action) => {\n      state.playedGravityCircleInstructions = true;\n    })\n    .addCase(playedOneShotRectangleInstructions, (state = initialState, action) => {\n      state.playedOneShotRectangleInstructions = true;\n    })\n    .addCase(playedDroneHexagonInstructions, (state = initialState, action) => {\n      state.playedDroneHexagonInstructions = true;\n    })\n    .addCase(playingCircleInstructions, (state = initialState, action) => {\n      state.playingCircleInstructions = action.payload;\n    })\n    .addCase(playingTriangleInstructions, (state = initialState, action) => {\n      state.playingTriangleInstructions = action.payload;\n    })\n    .addCase(playingGravityCircleInstructions, (state = initialState, action) => {\n      state.playingGravityCircleInstructions = action.payload;\n    })\n    .addCase(playingDroneHexagonInstructions, (state = initialState, action) => {\n      state.playingDroneHexagonInstructions = action.payload;\n    })\n    .addCase(playingOneShotRectangleInstructions, (state = initialState, action) => {\n      state.playingOneShotRectangleInstructions = action.payload;\n    })\n    .addDefaultCase((state, action) => {});\n});\n","import {\n  playedCircleInstructions,\n  playedTriangleInstructions,\n  playedGravityCircleInstructions,\n  playedOneShotRectangleInstructions,\n  playedDroneHexagonInstructions,\n  playingCircleInstructions,\n  playingTriangleInstructions,\n  playingGravityCircleInstructions,\n  playingOneShotRectangleInstructions,\n  playingDroneHexagonInstructions,\n} from '../reducers/animationStatusReducer';\n\nconst allActions = {\n  playedCircleInstructions,\n  playedTriangleInstructions,\n  playedGravityCircleInstructions,\n  playedOneShotRectangleInstructions,\n  playedDroneHexagonInstructions,\n  playingCircleInstructions,\n  playingTriangleInstructions,\n  playingGravityCircleInstructions,\n  playingOneShotRectangleInstructions,\n  playingDroneHexagonInstructions,\n};\n\nexport default allActions;\n","import { useEffect, useRef } from 'react';\nimport { useAppDispatch } from '../state/hooks';\nimport Controls from './Controls';\nimport { fixedSound, randomChord, drone1 } from './sounds';\nimport { debounce } from 'debounce';\nimport Matter, { Body, Engine, IEventCollision } from 'matter-js';\nimport { generateBackgroundColor } from '../utils/colorGen';\nimport {\n  createCircle,\n  createRandomTriangle,\n  createDroneHexagon,\n  createChordRectangle,\n  createGravityCircle,\n  SoundBody,\n  TriangleSoundBody,\n  RectangleSoundBody,\n} from '../utils/bodies';\nimport allActions from '../state/actions/allActions';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nMatter.use('matter-attractors');\n\nexport default function MatterMaker() {\n  const {\n    playedCircleInstructions,\n    playedTriangleInstructions,\n    playedGravityCircleInstructions,\n    playedOneShotRectangleInstructions,\n    playedDroneHexagonInstructions,\n  } = allActions;\n\n  const dispatch = useAppDispatch();\n  const canvasRef = useRef(null);\n\n  // Matter aliases\n  const Engine = Matter.Engine,\n    Render = Matter.Render,\n    Runner = Matter.Runner,\n    Composite = Matter.Composite,\n    Events = Matter.Events,\n    Mouse = Matter.Mouse,\n    MouseConstraint = Matter.MouseConstraint;\n\n  // create an engine\n  const engine = Engine.create();\n\n  // event handlers\n  function handleNewCircleClick(): void {\n    dispatch(playedCircleInstructions());\n    Composite.add(engine.world, createCircle());\n  }\n\n  function handleNewRandomTriangleClick() {\n    dispatch(playedTriangleInstructions());\n    Composite.add(engine.world, createRandomTriangle());\n  }\n\n  function handleNewGravityCircleClick() {\n    dispatch(playedGravityCircleInstructions());\n    Composite.add(engine.world, createGravityCircle());\n  }\n\n  function handleNewDroneHexagonClick() {\n    dispatch(playedDroneHexagonInstructions());\n    Composite.add(engine.world, createDroneHexagon());\n  }\n\n  function handleNewOneShotRectangleClick() {\n    dispatch(playedOneShotRectangleInstructions());\n    Composite.add(engine.world, createChordRectangle());\n  }\n\n  function handleDeleteAllBodiesClick() {\n    const allBodies = Composite.allBodies(engine.world);\n    allBodies.forEach((body) => {\n      if (body.label !== 'gravityCircle') {\n        Composite.remove(engine.world, body);\n      }\n    });\n  }\n  // function handleGravityOn() {\n  //   engine.gravity.y = 1;\n  //   engine.gravity.scale = 0.001;\n  //   console.log(engine.gravity);\n  // }\n\n  useEffect(() => {\n    // create a renderer\n    const render = Render.create({\n      element: canvasRef.current || document.body,\n      engine: engine,\n      options: {\n        wireframes: false,\n        background: `white`,\n        height: window.innerHeight,\n        width: window.innerWidth,\n      },\n    });\n\n    const gravityCircle = createGravityCircle(\n      render.options.width! / 2,\n      render.options.height! / 2\n    );\n\n    // collision handlers\n    const handleCircleCollisionStart = (e: IEventCollision<Engine>) => {\n      const bodyB = e.pairs[0].bodyB as SoundBody;\n      fixedSound(bodyB.sound);\n    };\n    const handleTriangleCollisionStart = (e: IEventCollision<Engine>) => {\n      const collidedTriangle = e.pairs[0].bodyB as TriangleSoundBody;\n      fixedSound(collidedTriangle.sound);\n\n      const nextNoteOption = collidedTriangle.nextRandomNote();\n      collidedTriangle.render.fillStyle = nextNoteOption.color;\n      (collidedTriangle as SoundBody).sound = nextNoteOption.sound;\n    };\n    const handleRectangleCollisionStart = (e: IEventCollision<Engine>) => {\n      const collidedSquare = e.pairs[0].bodyB as RectangleSoundBody;\n      randomChord(collidedSquare.sound);\n      // preparing body for next bounce by changing chord & color\n      const nextChordOption = collidedSquare.nextChord();\n      collidedSquare.render.fillStyle = nextChordOption.color;\n      collidedSquare.sound = nextChordOption.sound;\n      render.options.background = `#${generateBackgroundColor()}`;\n    };\n    const handleHexagonCollisionStart = (e: IEventCollision<Engine>) => {\n      drone1.play();\n      drone1.fade(0, 0.5, 120);\n      Composite.allBodies(engine.world).forEach((body) => {\n        if (body.label === 'gravityCircle') {\n          body.render.fillStyle = '#79ADDC';\n        }\n      });\n    };\n    const handleDroneCollisionEnd = (e: IEventCollision<Engine>) => {\n      drone1.fade(0.5, 0, 50);\n      drone1.once('fade', drone1.pause);\n      Composite.allBodies(engine.world).forEach((body) => {\n        if (body.label === 'gravityCircle') {\n          body.render.fillStyle = 'black';\n        }\n      });\n    };\n\n    const debouncedHandleCircleCollisionStart = debounce(handleCircleCollisionStart, 10, true);\n    const debouncedHandleTriangleCollisionStart = debounce(handleTriangleCollisionStart, 10, true);\n    const debouncedHandleRectangleCollisionStart = debounce(\n      handleRectangleCollisionStart,\n      800,\n      true\n    );\n    const debouncedHandleHexagonCollisionStart = debounce(handleHexagonCollisionStart, 100, true);\n\n    /** library for collision handlers.\n     * MatterJS does not support per-body collision detection,\n     * recommnded solution was to iterate through all collision events\n     * and search for the one looking for, but creating handler \"library\"\n     * was much more efficient */\n    const collisionStartHandlers = {\n      circle: debouncedHandleCircleCollisionStart,\n      triangle: debouncedHandleTriangleCollisionStart,\n      rectangle: debouncedHandleRectangleCollisionStart,\n      hexagon: debouncedHandleHexagonCollisionStart,\n    };\n\n    const collisionEndHandlers = {\n      hexagon: handleDroneCollisionEnd,\n    };\n\n    // event listeners\n    Events.on(engine, 'collisionStart', (e) => {\n      const collidedBody = e.pairs[0].bodyB;\n      const handler = (collisionStartHandlers as any)[collidedBody.label] || function () {};\n      handler(e);\n    });\n\n    Events.on(engine, 'collisionActive', (e) => {\n      const bodyA = e.pairs[0].bodyA;\n      const bodyB = e.pairs[0].bodyB;\n      if (bodyA.label === 'gravityCircle' && bodyB.label === 'droneCircle') {\n        // leaving empty for other planned features\n      }\n    });\n\n    Events.on(engine, 'collisionEnd', (e) => {\n      const collidedBody = e.pairs[0].bodyB;\n      const handler = (collisionEndHandlers as any)[collidedBody.label] || function () {};\n      handler();\n    });\n\n    // deletes bodies that move outside of the current screen range\n    Events.on(engine, 'afterUpdate', () => {\n      const height = render.options.height;\n      const width = render.options.width;\n\n      Composite.allBodies(engine.world).forEach((body) => {\n        if (\n          body.position.y > height! + 40 ||\n          body.position.y < -40 ||\n          body.position.x > width! + 40 ||\n          body.position.x < -40\n        ) {\n          Composite.remove(engine.world, body);\n        }\n      });\n    });\n\n    const mouse = Mouse.create(render.canvas);\n    const mouseConstraint = MouseConstraint.create(engine, {\n      mouse: mouse,\n      constraint: {\n        stiffness: 0.2,\n        render: {\n          visible: false,\n        },\n      },\n    });\n\n    Events.on(mouseConstraint, 'mousedown', (e) => {\n      const clickedBody = e.source.body;\n      if (clickedBody?.label === 'gravityCircle') {\n        Body.setStatic(clickedBody, false);\n      } else {\n        return;\n      }\n    });\n\n    Events.on(mouseConstraint, 'mouseup', (e) => {\n      const allBodies = Composite.allBodies(engine.world);\n      for (let body of allBodies) {\n        if (body.label === 'gravityCircle' && !body.isStatic) {\n          Body.setStatic(body, true);\n        }\n      }\n    });\n\n    engine.gravity.y = 0;\n    // add all of the bodies to the world\n    Composite.add(engine.world, [gravityCircle]);\n    Composite.add(engine.world, mouseConstraint);\n    // run the renderer\n    Render.run(render);\n    // create runner\n    const runner = Runner.create();\n    // run the engine\n    Runner.run(runner, engine);\n    return () => {\n      Render.stop(render);\n      Composite.clear(engine.world, false);\n      Engine.clear(engine);\n      render.canvas.remove();\n      render.textures = {};\n    };\n  }, [Composite, Engine, Events, Mouse, MouseConstraint, Render, Runner, engine]);\n\n  return (\n    <div ref={canvasRef}>\n      <Controls\n        handleNewCircleClick={handleNewCircleClick}\n        handleNewRandomTriangleClick={handleNewRandomTriangleClick}\n        handleNewDroneHexagonClick={handleNewDroneHexagonClick}\n        handleNewGravityCircleClick={handleNewGravityCircleClick}\n        handleNewOneShotRectangleClick={handleNewOneShotRectangleClick}\n        handleDeleteAllBodiesClick={handleDeleteAllBodiesClick}\n      />\n    </div>\n  );\n}\n","import { useEffect, useCallback } from 'react';\nimport { useAppSelector, useAppDispatch } from '../state/hooks';\nimport { motion, useAnimation } from 'framer-motion';\nimport allActions from '../state/actions/allActions';\nimport styled from 'styled-components';\n\nconst InstructionsContainer = styled(motion.h3)`\n  position: absolute;\n  top: 100px;\n  pointer-events: none;\n`;\n\ninterface InstructionsProp {}\n\nconst Instructions = (props: InstructionsProp) => {\n  const dispatch = useAppDispatch();\n  const {\n    playingCircleInstructions,\n    playingTriangleInstructions,\n    playingGravityCircleInstructions,\n    playingOneShotRectangleInstructions,\n    playingDroneHexagonInstructions,\n  } = allActions;\n\n  const circleControlsClicked = useAppSelector(\n    (state) => state.animationStatus.playedCircleInstructions\n  );\n  const triangleControlsClicked = useAppSelector(\n    (state) => state.animationStatus.playedTriangleInstructions\n  );\n  const gravityCircleControlsClicked = useAppSelector(\n    (state) => state.animationStatus.playedGravityCircleInstructions\n  );\n  const droneHexagonControlsClicked = useAppSelector(\n    (state) => state.animationStatus.playedDroneHexagonInstructions\n  );\n  const oneShotRectangleControlsclicked = useAppSelector(\n    (state) => state.animationStatus.playedOneShotRectangleInstructions\n  );\n\n  // instructions and its animation controls\n  const circleLine1 = 'Circles are consistent. They like to pick one note and keep playing it';\n  const circleLine2 = `throw it away if you don't like what it's playing`;\n  const circleInstructionsControl = useAnimation();\n\n  const triangleLine1 = `Triangles are unpredictable...`;\n  const triangleLine2 = `even the notes they play are random`;\n  const triangleInstructionsControl = useAnimation();\n\n  const gravityCircleLine1 = `Did you know you can move the black circle with your mouse?`;\n  const gravityCircleInstructionsControl = useAnimation();\n\n  const droneHexagonLine1 = `The hexagon doesn't like craziness..`;\n  const droneHexagonLine2 = `it will only play as long as it is touching the black circle`;\n  const droneHexagonInstructionsControl = useAnimation();\n\n  const oneShotRectangleLine1 = `The rectangle likes flashy entrances`;\n  const oneShotRectangleLine2 = `enjoy what the rectangle has prepared for you`;\n  const oneShotRectangleInstructionsControl = useAnimation();\n\n  // handlers\n  const handleCircleAnimationStart = useCallback(async () => {\n    dispatch(playingCircleInstructions(true));\n    await circleInstructionsControl.start('visible');\n    await new Promise((r) => setTimeout(r, 2000));\n    await circleInstructionsControl.start('hidden');\n    dispatch(playingCircleInstructions(false));\n  }, [dispatch, circleInstructionsControl, playingCircleInstructions]);\n\n  const handleTriangleAnimationStart = useCallback(async () => {\n    dispatch(playingTriangleInstructions(true));\n    await triangleInstructionsControl.start('visible');\n    await new Promise((r) => setTimeout(r, 2000));\n    await triangleInstructionsControl.start('hidden');\n    dispatch(playingTriangleInstructions(false));\n  }, [dispatch, playingTriangleInstructions, triangleInstructionsControl]);\n\n  const handleGravityCircleAnimationStart = useCallback(async () => {\n    dispatch(playingGravityCircleInstructions(true));\n    await gravityCircleInstructionsControl.start('visible');\n    await new Promise((r) => setTimeout(r, 2000));\n    await gravityCircleInstructionsControl.start('hidden');\n    dispatch(playingGravityCircleInstructions(false));\n  }, [dispatch, gravityCircleInstructionsControl, playingGravityCircleInstructions]);\n\n  const handleDroneHexagonAnimationStart = useCallback(async () => {\n    dispatch(playingDroneHexagonInstructions(true));\n    await droneHexagonInstructionsControl.start('visible');\n    await new Promise((r) => setTimeout(r, 2000));\n    await droneHexagonInstructionsControl.start('hidden');\n    dispatch(playingDroneHexagonInstructions(false));\n  }, [dispatch, droneHexagonInstructionsControl, playingDroneHexagonInstructions]);\n\n  const handleOneShotRectangleAnimationStart = useCallback(async () => {\n    dispatch(playingOneShotRectangleInstructions(true));\n    await oneShotRectangleInstructionsControl.start('visible');\n    await new Promise((r) => setTimeout(r, 2000));\n    await oneShotRectangleInstructionsControl.start('hidden');\n    dispatch(playingOneShotRectangleInstructions(false));\n  }, [dispatch, oneShotRectangleInstructionsControl, playingOneShotRectangleInstructions]);\n\n  /** states break matterJS if used on MatterMaker.tsx.\n   * Current workaround for handling clicks from MatterMaker to other components\n   * is using redux and \"listening\" to change in states via useEffect.\n   * It is hacky, but the best way as of this moment*/\n\n  useEffect(() => {\n    if (circleControlsClicked) {\n      handleCircleAnimationStart();\n    }\n  }, [circleControlsClicked, handleCircleAnimationStart]);\n\n  useEffect(() => {\n    if (triangleControlsClicked) {\n      handleTriangleAnimationStart();\n    }\n  }, [triangleControlsClicked, handleTriangleAnimationStart]);\n\n  useEffect(() => {\n    if (gravityCircleControlsClicked) {\n      handleGravityCircleAnimationStart();\n    }\n  }, [gravityCircleControlsClicked, handleGravityCircleAnimationStart]);\n\n  useEffect(() => {\n    if (droneHexagonControlsClicked) {\n      handleDroneHexagonAnimationStart();\n    }\n  }, [droneHexagonControlsClicked, handleDroneHexagonAnimationStart]);\n\n  useEffect(() => {\n    if (oneShotRectangleControlsclicked) {\n      handleOneShotRectangleAnimationStart();\n    }\n  }, [oneShotRectangleControlsclicked, handleOneShotRectangleAnimationStart]);\n\n  // variants\n  const sentence = {\n    hidden: {\n      opacity: 1,\n      transition: {\n        delay: 0.9,\n        staggerChildren: 0.01,\n      },\n    },\n    visible: {\n      opacity: 1,\n      transition: {\n        delay: 0.5,\n        staggerChildren: 0.05,\n      },\n    },\n  };\n  const letter = {\n    hidden: { opacity: 0, y: 50 },\n    visible: {\n      opacity: 1,\n      y: 0,\n    },\n  };\n\n  // create sentence animation components\n  const circleSentence1 = circleLine1.split('').map((char, idx) => (\n    <motion.span key={char + '-' + idx} variants={letter}>\n      {char}\n    </motion.span>\n  ));\n  const circleSentence2 = circleLine2.split('').map((char, idx) => (\n    <motion.span key={char + '-' + idx} variants={letter}>\n      {char}\n    </motion.span>\n  ));\n  const triangleSentence1 = triangleLine1.split('').map((char, idx) => (\n    <motion.span key={char + '-' + idx} variants={letter}>\n      {char}\n    </motion.span>\n  ));\n  const triangleSentence2 = triangleLine2.split('').map((char, idx) => (\n    <motion.span key={char + '-' + idx} variants={letter}>\n      {char}\n    </motion.span>\n  ));\n  const gravityCircleSentence1 = gravityCircleLine1.split('').map((char, idx) => (\n    <motion.span key={char + '-' + idx} variants={letter}>\n      {char}\n    </motion.span>\n  ));\n  const droneHexagonSentence1 = droneHexagonLine1.split('').map((char, idx) => (\n    <motion.span key={char + '-' + idx} variants={letter}>\n      {char}\n    </motion.span>\n  ));\n  const droneHexagonSentence2 = droneHexagonLine2.split('').map((char, idx) => (\n    <motion.span key={char + '-' + idx} variants={letter}>\n      {char}\n    </motion.span>\n  ));\n\n  const oneShotRectangleSentence1 = oneShotRectangleLine1.split('').map((char, idx) => (\n    <motion.span key={char + '-' + idx} variants={letter}>\n      {char}\n    </motion.span>\n  ));\n  const oneShotRectangleSentence2 = oneShotRectangleLine2.split('').map((char, idx) => (\n    <motion.span key={char + '-' + idx} variants={letter}>\n      {char}\n    </motion.span>\n  ));\n\n  return (\n    <>\n      <InstructionsContainer\n        variants={sentence}\n        initial=\"hidden\"\n        animate={circleInstructionsControl}\n      >\n        {circleSentence1}\n        <br />\n        {circleSentence2}\n      </InstructionsContainer>\n\n      <InstructionsContainer\n        variants={sentence}\n        initial=\"hidden\"\n        animate={triangleInstructionsControl}\n      >\n        {triangleSentence1}\n        <br />\n        {triangleSentence2}\n      </InstructionsContainer>\n\n      <InstructionsContainer\n        variants={sentence}\n        initial=\"hidden\"\n        animate={gravityCircleInstructionsControl}\n      >\n        {gravityCircleSentence1}\n      </InstructionsContainer>\n\n      <InstructionsContainer\n        variants={sentence}\n        initial=\"hidden\"\n        animate={droneHexagonInstructionsControl}\n      >\n        {droneHexagonSentence1}\n        <br />\n        {droneHexagonSentence2}\n      </InstructionsContainer>\n\n      <InstructionsContainer\n        variants={sentence}\n        initial=\"hidden\"\n        animate={oneShotRectangleInstructionsControl}\n      >\n        {oneShotRectangleSentence1}\n        <br />\n        {oneShotRectangleSentence2}\n      </InstructionsContainer>\n    </>\n  );\n};\n\nexport default Instructions;\n","import MatterMaker from './MatterMaker';\nimport Instructions from './Instructions';\nimport styled from 'styled-components';\n\nconst CenteredDiv = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nfunction App() {\n  return (\n    <CenteredDiv>\n      <Instructions />\n      <MatterMaker />\n    </CenteredDiv>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { animationStatusReducer } from './animationStatusReducer';\n\nconst rootReducer = combineReducers({\n  animationStatus: animationStatusReducer,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport rootReducer from './reducers/rootReducer';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['ADD_SOUND', 'REMOVE_SOUND'],\n      },\n    }),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { store } from './state/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}